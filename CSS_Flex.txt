The main axis is used to position flex items with the following properties:
justify-content
flex-wrap
flex-grow
flex-shrink


The cross axis is used to position flex items with the following properties:
align-items
align-content


flex:
	The shorthand flex property provides a convenient way for specifying how elements stretch and shrink, while simplifying the CSS required. 
	The flex property allows you to declare flex-grow, flex-shrink, and flex-basis all in one line
	Bsp.:
		.big {
		  flex: 2 1 150px;
		}


flex-wrap: 
	Sometimes, we don’t want our content to shrink to fit its container. 
	Instead, we might want flex items to move to the next line when necessary. This can be declared with the flex-wrap property
	
	wrap 			— child elements of a flex container that don’t fit into a row will move down to the next line
	wrap-reverse 	— the same functionality as wrap, but the order of rows within a flex container is reversed (for example, in a 2-row flexbox, the first row from a wrap container will become the second in wrap-reverse and the second row from the wrap container will become the first in wrap-reverse)
	nowrap 			— prevents items from wrapping; this is the default value and is only necessary to override a wrap value set by a different CSS rule.


align-content: 
	Now that elements can wrap to the next line, we might have multiple rows of flex items within the same container. 
	In a previous exercise, we used the align-items property to space flex items from the top to the bottom of a flex container
	
	flex-start 		— all rows of elements will be positioned at the top of the parent container with no extra space between.
	flex-end 		— all rows of elements will be positioned at the bottom of the parent container with no extra space between.
	center 			— all rows of elements will be positioned at the center of the parent element with no extra space between.
	space-between 	— all rows of elements will be spaced evenly from the top to the bottom of the container with no space above the first or below the last.
	space-around 	— all rows of elements will be spaced evenly from the top to the bottom of the container with the same amount of space at the top and bottom and between each element.
	stretch 		— if a minimum height or no height is specified, the rows of elements will stretch to fill the parent container from top to bottom (default value).


flex-direction: 
	The main axis and cross axis are interchangeable. We can switch them using the flex-direction property. 
	If we add the flex-direction property and give it a value of column, the flex items will be ordered vertically, not horizontally.
	
	row 			— elements will be positioned from left to right across the parent element starting from the top left corner (default).
	row-reverse 	— elements will be positioned from right to left across the parent element starting from the top right corner.
	column 			— elements will be positioned from top to bottom of the parent element starting from the top left corner.
	column-reverse 	— elements will be positioned from the bottom to the top of the parent element starting from the bottom left corner.

flex-flow: Like the shorthand flex property, the shorthand flex-flow property is used to declare both the flex-wrap and flex-direction properties in one line.
	flex-flow: column wrap;